# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccessToken {
  access_token: String!
}

enum AllowedTypes {
  document
  video
}

type Category {
  id: Float!
  name: String!
}

type Course {
  author: User!
  bulletPoints: [CourseBulletPoint!]!
  category: Category!
  description: String!
  headline: String!
  id: Float!
  isPaid: Boolean!
  name: String!
  previewUrl: String!
  price: Float!
  ratings: [CourseRating!]!
  requirements: [CourseRequirement!]!
  sections: [CourseSection!]!
}

type CourseBulletPoint {
  description: String!
  id: Float!
  sortNumber: Float!
}

type CourseRating {
  course: Course!
  id: Float!
  rating: Float!
  user: User!
}

type CourseRequirement {
  description: String!
  id: Float!
  sortNumber: Float!
}

type CourseSection {
  id: Float!
  materials: [SectionMaterial!]!
  name: String!
  sortNumber: Float!
}

input CreateBulletPointType {
  description: String!
  sortNumber: Float!
}

input CreateCategoryType {
  name: String!
}

input CreateCourseInput {
  bulletPoints: [CreateBulletPointType!]
  category_id: Float!
  description: String!
  headline: String!
  isPaid: Boolean!
  name: String!
  previewUrl: String!
  price: Float!
  requirements: [CreateCourseRequirementType!]
  sections: [CreateCourseSectionType!]
}

input CreateCourseRatingType {
  rating: Float!
}

input CreateCourseRequirementType {
  description: String!
  sortNumber: Float!
}

input CreateCourseSectionType {
  materials: [CreateSectionMaterialType!]
  name: String!
  sortNumber: Float!
}

input CreateSectionMaterialType {
  name: String!
  sortNumber: Float!
  type: AllowedTypes!
  url: String!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type Mutation {
  buyCourse(courseId: Float!): NetworkResponse!
  createCategory(createCategoryData: CreateCategoryType!): Category!
  createCourse(createCourseData: CreateCourseInput!): Course!
  createCourseBulletPoint(courseId: Float!, createBulletPointData: CreateBulletPointType!): CourseBulletPoint!
  createCourseRequirement(courseId: Float!, createCourseRequirementData: CreateCourseRequirementType!): CourseRequirement!
  createCourseSection(courseId: Float!, createCourseSectionData: CreateCourseSectionType!): CourseSection!
  createSectionMaterial(createSectionMaterialData: CreateSectionMaterialType!, sectionId: Float!): SectionMaterial!
  createUser(createUserData: CreateUserInput!): User!
  deleteCategory(id: Float!): Category!
  deleteCourse(id: Float!): Course!
  deleteCourseBulletPoint(id: Float!): CourseBulletPoint!
  deleteCourseRating(id: Float!): CourseRating!
  deleteCourseRequirement(id: Float!): CourseRequirement!
  deleteCourseSection(id: Float!): CourseSection!
  deleteSectionMaterial(id: Float!): SectionMaterial!
  deleteUser(id: Float!): User!
  login(email: String!, password: String!): AccessToken!
  rateCourse(courseId: Float!, createCourseRatingData: CreateCourseRatingType!): CourseRating!
  register(user: CreateUserInput!): AccessToken!
  updateCategory(id: Float!, updateCategoryData: UpdateCategoryType!): Category!
  updateCourse(id: Float!, updateCourseData: UpdateCourseType!): Course!
  updateCourseBulletPoint(id: Float!, updateBulletTypeData: UpdateBulletPointType!): CourseBulletPoint!
  updateCourseRequirement(id: Float!, updateCourseRequirementData: UpdateCourseRequirementType!): CourseRequirement!
  updateCourseSection(id: Float!, updateCourseSectionData: UpdateCourseSectionType!): CourseSection!
  updateMe(updateUserData: UpdateUserInput!): User!
  updateSectionMaterial(id: Float!, updateSectionMaterialData: UpdateSectionMaterialType!): SectionMaterial!
  updateUser(id: Float!, updateUserData: UpdateUserInput!): User!
  wishlistCourse(courseId: Float!): User!
}

type NetworkResponse {
  message: String
  status: String!
}

type Query {
  bulletPoints(id: Float!): CourseBulletPoint!
  categories: [Category!]!
  category(id: Float!): Category!
  course(id: Float!): Course!
  courseBulletPoints(courseId: Float!): [CourseBulletPoint!]!
  courseRating(id: Float!): CourseRating!
  courseRatings(courseId: Float!): [CourseRating!]!
  courseRequirement(id: Float!): CourseRequirement!
  courseRequirements(courseId: Float!): [CourseRequirement!]!
  courses: [Course!]!
  courseSection(id: Float!): CourseSection!
  courseSections(courseId: Float!): [CourseSection!]!
  me: User!
  myPurchasedCoursesList: [Course!]!
  myWishList: [Course!]!
  sectionMaterial(id: Float!): SectionMaterial!
  sectionMaterials(sectionId: Float!): [SectionMaterial!]!
  user(id: Float!): User!
  users: [User!]!
}

type SectionMaterial {
  id: Float!
  name: String!
  sortNumber: Float!
  type: AllowedTypes!
  url: String!
}

input UpdateBulletPointType {
  description: String
  sortNumber: Float
}

input UpdateCategoryType {
  name: String!
}

input UpdateCourseRequirementType {
  description: String
  sortNumber: Float
}

input UpdateCourseSectionType {
  name: String
  sortNumber: Float
}

input UpdateCourseType {
  description: String
  headline: String
  isPaid: Boolean
  name: String
  previewUrl: String
  price: Float
}

input UpdateSectionMaterialType {
  name: String
  sortNumber: Float
  type: AllowedTypes
  url: String
}

input UpdateUserInput {
  email: String
  firstName: String
  lastName: String
  password: String
}

type User {
  createdCourses: [Course!]!
  email: String!
  firstName: String!
  id: Float!
  lastName: String!
  ratings: [CourseRating!]!
}
